#!/usr/bin/env bash

# Is git installed?
type git >/dev/null 2>&1 || { echo >&2 "'git' not installed. Aborting..."; exit 1; }


usage() {
    echo "Usage: $0 install|clean-install"
    echo "NOTE: Re-running 'install' will update all plugins."
    exit 1
}


[ $# -eq 1 ] || usage


action_header() {
    msg=$1
    msg_len=${#msg}

    echo -e "\n${msg}"
    printf %${msg_len}s |tr ' ' '-' ;echo
}


install_vimplug() {
    curl --silent -fLo $VIM_DIR/autoload/plug.vim --create-dirs \
      https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
}


install_fonts_mac() {
    rsync --times $FONTS ~/Library/Fonts >/dev/null
}


install_fonts_linux() {
    rsynced_files=$(rsync --times --itemize-changes $FONTS ~/.fonts)

    [ $? -eq 0 ] || exit 1

    if [ -n "${rsynced_files}" ]; then
        fc-cache -fv ~/.fonts >/dev/null
    fi
}


install_fonts() {

    os=$(uname -s)

    case $os in 
        Darwin)
            install_fonts_mac
            ;;
        Linux)
            install_fonts_linux
            target='~/.fonts'
            ;;
        *)
            echo -e "Unsupported OS '${os}'. Aborting..."
            ;;
    esac
}


install_dotfiles() {
    
    #
    # Link up ~/.vimrc to vimfiles/vimrc in the project.
    # If it already exists as a link, we'll delete it and recreate it.
    # If it already exists and is not a link, we'll leave it, causing the 
    # subsequent link creation to fail (with an error message we'll want
    # to see).
    #
    
    [ -L ~/.vimrc ] && rm ~/.vimrc
    ln -s $VIM_DIR/vimfiles/vimrc ~/.vimrc
    
    # Surfingkeys is firefox/chrome vim plugin.
    [ -L ~/.surfingkeysrc ] && rm ~/.surfingkeysrc
    ln -s $VIM_DIR/vimfiles/surfingkeysrc ~/.surfingkeysrc
    
    # Vrapper is the eclipse vim plugin
    [ -L ~/.vrapperrc ] && rm ~/.vrapperrc
    ln -s $VIM_DIR/vimfiles/vrapperrc ~/.vrapperrc
}


install_plugins() {
    # g:plugin_install=1 will cause .vimrc to stop processing after
    # the plugins are installed.
    vim --cmd "let g:plugin_install=1" +PlugInstall +qall
}

link_vimwiki() {
    [ -d ~/Google\ Drive/vimwiki ] && [ ! -L ~/vimwiki ] && ln -s ~/Google\ Drive/vimwiki/ ~/vimwiki
}


install() {
   install_vimplug
   install_fonts
   install_dotfiles
   install_plugins
   link_vimwiki
}

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
VIM_DIR="$( cd $SCRIPT_DIR/.. && pwd )"

# This must match what's in .vimrc's plug#begin().
PLUGIN_DIR="${VIM_DIR}/plugged"

FONTS="${VIM_DIR}/fonts/powerline-fonts-SourceCodePro/*.otf"

case "$1" in 
    install)
        install
        ;;
    clean-install)
        [ -d $PLUGIN_DIR ] && rm -rf $PLUGIN_DIR 2>/dev/null
        install
        ;;
    *)
        echo "Unknown option '$1'. Aborting..."
        exit 1
esac
